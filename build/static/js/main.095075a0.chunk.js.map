{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","baseUrl","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","find","n","changeNote","returnedNote","map","catch","error","setTimeout","key","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"mNAaeA,EAXF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACXC,EAAQF,EAAKG,UAAY,eAAiB,iBAEhD,OACI,wBAAIC,UAAU,QACTJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCKjCK,EAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAgB,OAAZA,EACO,KAGP,yBAAKJ,UAAU,SACVI,ICQEC,EAdA,WAMX,OACI,yBAAKC,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIN,6BACA,uG,gBCgBG,EAvBA,WACX,IAAMC,EAAUC,IAAMC,IAHV,eAKNC,EAAc,CAChBC,GAAI,IACJb,QAAS,mCACTc,KAAM,2BACNhB,WAAW,GAGf,OAAOW,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAa1C,EAVA,SAAAO,GAEX,OADgBT,IAAMU,KAhBV,cAgBwBD,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACJ,EAAIM,GAEhB,OADgBT,IAAMW,IAAIC,eAAgBT,EAAIM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,8NClB7C,IAgFiBM,EAhFL,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGgBJ,oBAAS,GAHzB,mBAGPK,EAHO,KAGEC,EAHF,OAI0BN,mBAAS,MAJnC,mBAIPO,EAJO,KAIOC,EAJP,KAcdC,qBARa,WACTC,IAEKnB,MAAK,SAAAoB,GACFT,EAASS,QAIL,IAEhB,IAAMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAA1C,GAAI,OAAIA,EAAKG,aAE1DF,EAAmB,SAACiB,GACtB,IAAMlB,EAAO8B,EAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KAChC2B,E,yVAAU,IAAO7C,EAAP,CAAaG,WAAYH,EAAKG,YAE9CoC,EACYrB,EAAI2B,GACXzB,MAAK,SAAA0B,GACFf,EAASD,EAAMiB,KAAI,SAAA/C,GAAI,OAAIA,EAAKkB,KAAOA,EAAKlB,EAAO8C,SAEtDE,OAAM,SAACC,GACJZ,EAAgB,SAAD,OAAUrC,EAAKK,QAAf,sCACf6C,YAAW,WACPb,EAAgB,QACjB,KACHN,EAASD,EAAMY,QAAO,SAAAE,GAAC,OAAIA,EAAE1B,KAAOA,UA2BhD,OACI,6BACI,qCACA,kBAAC,EAAD,CAAcV,QAAS4B,IACvB,6BACI,4BAAQ9B,QAAS,kBAAM6B,GAAYD,KAAnC,QACUA,EAAU,YAAc,QAGtC,4BAhCWO,EAAYM,KAAI,SAAA/C,GAAI,OACnC,kBAAC,EAAD,CAAMmD,IAAKnD,EAAKkB,GAAIlB,KAAMA,EAAMC,iBAAkB,kBAAMA,EAAiBD,EAAKkB,WAkC1E,0BAAMkC,SA3BE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACflD,QAAS2B,EACTb,MAAM,IAAIqC,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAE/BpB,EACYgB,GACPnC,MAAK,SAAA0B,GACFf,EAASD,EAAMP,OAAOuB,IACtBb,EAAW,SAiBX,2BAAO2B,KAAK,UAAUC,MAAO7B,EAAS8B,SAhCzB,SAACT,GACtBpB,EAAWoB,EAAMU,OAAOF,UAgChB,4BAAQD,KAAK,UAAb,SAEJ,kBAAC,EAAD,Q,MC5EZI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.095075a0.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Note = ({note, toggleImportance}) => {\r\n    const label = note.important ? 'make regular' : 'make important'\r\n\r\n    return (\r\n        <li className=\"note\">\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, department of Computer Science, University of Helsinki 2019</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/notes/'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    \r\n    const nonExisting = {\r\n        id: 10000,\r\n        content: 'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true,\r\n    }\r\n    \r\n    return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(baseUrl + '/' + id, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update}","import React, {useState, useEffect} from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\nimport noteService from './services/notes'\r\n \r\nconst App = () => {\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState('')\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    const hook = () => {\r\n        noteService\r\n            .getAll()\r\n            .then(initialNotes => {\r\n                setNotes(initialNotes)\r\n            })\r\n    }\r\n\r\n    useEffect(hook, [])\r\n\r\n    const notesToShow = showAll ? notes : notes.filter(note => note.important)\r\n\r\n    const toggleImportance = (id) => {\r\n        const note = notes.find(n => n.id === id)\r\n        const changeNote = {...note, important: !note.important}\r\n\r\n        noteService\r\n            .update(id, changeNote)\r\n            .then(returnedNote => {\r\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n            })\r\n            .catch((error) =>{\r\n                setErrorMessage(`Note '${note.content}' was already removed from server`)\r\n                setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                }, 5000)\r\n                setNotes(notes.filter(n => n.id !== id))\r\n            })\r\n    }\r\n\r\n    const rows = () => notesToShow.map(note =>\r\n        <Note key={note.id} note={note} toggleImportance={() => toggleImportance(note.id)} />\r\n    )\r\n\r\n    const handleNoteChange = (event) => {\r\n        setNewNote(event.target.value)\r\n    }\r\n\r\n    const addNote = (event) => {\r\n        event.preventDefault()\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() > 0.5,\r\n        }\r\n        noteService\r\n            .create(noteObject)\r\n            .then(returnedNote => {\r\n                setNotes(notes.concat(returnedNote))\r\n                setNewNote('')\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notes</h1>\r\n            <Notification message={errorMessage} />\r\n            <div>\r\n                <button onClick={() => setShowAll(!showAll)}>\r\n                    show {showAll ? 'important' : 'all'}\r\n                </button>\r\n            </div>\r\n            <ul>\r\n                {rows()}\r\n            </ul>\r\n            <form onSubmit={addNote}>\r\n                <input type=\"textbox\" value={newNote} onChange={handleNoteChange} />\r\n                <button type=\"submit\">save</button>\r\n            </form>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\n  export default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}